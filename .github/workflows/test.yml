name: tests

on:
  push:
    branches: [ master ]
    tags-ignore: '**'
  pull_request:
    types: [opened, synchronize]
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      MALSHARE_API: ${{ secrets.MALSHARE_API }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.12']
        os: [windows-latest, macos-13, ubuntu-latest]
    steps:
      - name: Debug Logging
        run: |
          echo "event  = ${{ github.event_name }}"
          echo "action = ${{ github.event.action }}"
      - name: Checkout Main Repository
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' && github.event_name != 'pull_request_target' }}
      - name: Clone PR Source Repository
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Dependencies
        uses: ./.github/actions/setup/
        with:
          py: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
      - name: Run Tests
        uses: ./.github/actions/test/
        with:
          py: ${{ matrix.python-version }}
          os: ${{ matrix.os }}

  audit:
    name: audit dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        os: [windows-latest, macos-13, ubuntu-latest]
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' && github.event_name != 'pull_request_target' }}
      - name: Clone PR Source Repository
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Dependencies
        uses: ./.github/actions/setup/
        with:
          py: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
      - name: Audit Dependencies
        uses: pypa/gh-action-pip-audit@v1.1.0

  coverage:
    if: ${{ github.repository_owner == 'binref' }}
    runs-on: windows-latest
    needs: 
      - test
      - audit
    env:
      MALSHARE_API: ${{ secrets.MALSHARE_API }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Dependencies
      uses: ./.github/actions/setup/
      with:
        py: '3.12'
        os: windows-latest
    - name: Install Coverage Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
    - name: Run tests and collect coverage
      run: pytest --cov-config=.coveragerc --cov refinery test/
      shell: powershell
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        fail_ci_if_error: true
